#!/bin/bash
set -u

readonly EM_VERSION="v0.0.0"
typeset EM_THIS_CMD="${0##*/}"
typeset EM_IDX

EM_puts () {
  (( EM_IDX++ ))
  printf "%d:%s\\n" "$EM_IDX" "$1"
}

EM_command_version () {
  echo "${EM_THIS_CMD} ${EM_VERSION}"
}

EM_command_help () {
  cat << _EOS_
Usage:
  ${EM_THIS_CMD} [OPTIONS] MESSAGE

OPTIONS:
  --help       Display this help and exit
  --version    Output version information and exit
  -s           Read message from stdin
  -l           Register new meme to local
  -g           Register new meme to global

REGISTER MEME:
  '{}' is the placeholder of the message.
  For example,
    ${EM_THIS_CMD} -l 'こんにちは{}、ありがとう{}'
   -g option shows the URL to send the pull-request to the ${EM_THIS_CMD} repository.

_EOS_

}

EM_templates () {
  EM_IDX=-1
  ### @@@TEMPLATE_START@@@
  EM_puts "この${1}を作ったのは誰だあっ!!"
  EM_puts "ゆっくり${1}していってね！！！"
  EM_puts "突然の${1} "
  EM_puts "急に${1}が来たので"
  EM_puts "${1}…そういうのもあるのか"
  EM_puts "${1}かわいいよ${1}"
  EM_puts "${1}が死んでも代わりはいるもの"
  EM_puts "${1}に気づくとは…やはり天才か"
  EM_puts "${1}は素人なのですが質問よろしいでしょうか"
  EM_puts "${1}とダンスっちまった"
  EM_puts "${1}をセンターに入れてスイッチ、${1}をセンターに入れてスイッチ..."
  EM_puts "見ろ！人が${1}のようだ！"
  EM_puts "我思う、ゆえに${1}あり"
  EM_puts "${1}は俺を怒らせた"
  EM_puts "わぁい${1}、${1}大好き"
  EM_puts "むしゃむしゃしていた。${1}なら何でもよかった。"
  EM_puts "身体は闘争を求める → ${1}が売れる → ${1}の新作が作られる"
  ### @@@TEMPLATE_INSERT_HERE@@@
  ### @@@TEMPLATE_END@@@
}

EM_command_echo () {
  local _msg="$1"
  local _idx_pattern=
  shift
  EM_templates "$_msg" > /dev/null
  (( EM_IDX++ ))
  # RANDOM range is 0 - 32767. take care.
  _idx_pattern="^$(( RANDOM % EM_IDX )):"
  EM_templates "$_msg" \
    | grep "${_idx_pattern}" \
    | sed "s/${_idx_pattern}//"
}

EM_msg() {
  local _loglevel="$1"
  local _msgbody="$2"
  local _msg="${EM_THIS_CMD}:${_loglevel}: ${_msgbody}"
  printf "%s\\n" "${_msg}" >&2
}

EM_msg_error() {
  EM_msg "Error" "$1"
}

main () {
  local _opt_register_local=0
  local _opt_register_global=0
  local _msg=""
  while (( $# > 0 )); do
    local _opt="$1"; shift
    case "$_opt" in
      --help)
        EM_command_help
        return 0
        ;;
      --version)
        EM_command_version
        return 0
        ;;
      -s)
        if [[ -n "$_msg" ]]; then
          EM_command_help
          EM_msg_error "Invalid argument '$_msg'"
          return 1
        fi
        _msg="$(cat)"
        ;;
      -l)
        _opt_register_local=1
        ;;
      -g)
        _opt_register_global=1
        ;;
      *)
        if [[ -n "$_msg" ]]; then
          EM_command_help
          EM_msg_error "Invalid argument '$_msg'"
          return 1
        fi
        _msg="$_opt"
        ;;
    esac
  done
  _msg="${_msg:-$USER}"
  if [[ $_opt_register_local -eq 1 ]]; then
    :
  fi
  if [[ $_opt_register_global -eq 1 ]]; then
    :
  fi
  EM_command_echo "${_msg}"
}

main "${1+"$@"}"
exit $?
